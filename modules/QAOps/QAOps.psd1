@{
# Script module or binary module file associated with this manifest.
RootModule = 'QAOps.psm1'

# Version number of this module.
ModuleVersion = '0.2.0'

# ID used to uniquely identify this module
GUID = '00000000-0000-0000-0000-000000000000' # IMPORTANT: Replace with a real GUID generated by [guid]::NewGuid().ToString()

# Author of this module
Author = 'Amirah'

# Company or vendor of this module
CompanyName = 'AmirahCo'

# Copyright statement for this module
Copyright = '(c) $(Get-Date -Format yyyy) Amirah. All rights reserved.'

# Description of the functionality provided by this module
Description = 'PowerShell QOps module for system audit, operations, and reporting.'

# Minimum version of the PowerShell engine required by this module
PowerShellVersion = '7.0'

# Name of the PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
# DotNetFrameworkVersion = ''

# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
# CLRVersion = ''

# Processor architecture (None, X86, Amd64) required by this module
ProcessorArchitecture = 'None'

# Modules that must be imported into the global environment prior to importing this module
# RequiredModules = @()

# Assemblies that must be loaded prior to importing this module
# RequiredAssemblies = @()

# Script files (.ps1) that are run in the caller's session state when the module is imported
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypeFiles = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatFiles = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
# NestedModules = @()

# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
FunctionsToExport = @(
    'Get-SystemReport',
    'Invoke-DiskCleanup'
    # Add other functions here as they are created, e.g.:
    # 'Invoke-FullAudit'
)

# Cmdlets to export from this module
CmdletsToExport = @()

# Variables to export from this module
VariablesToExport = '*'

# Aliases to export from this module
AliasesToExport = @()

# DSC resources to export from this module
# DscResourcesToExport = @()

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
FileList = @(
    # Wrapper scripts are part of the repository but not packaged inside the module via FileList.
    # They are intended to be used from the cloned repository structure.
    # If these scripts were meant to be installed alongside the module (e.g., in the module's bin directory),
    # they would typically be placed within the module folder (e.g., modules/QAOps/scripts) and listed here without '..\'
)

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata.
PrivateData = @{

    PSData = @{
        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = @('QA', 'DevOps', 'SystemAudit', 'PowerShell', 'Automation', 'Windows', 'Linux', 'CrossPlatform')

        # A URL to the license for this module.
        LicenseUri = 'https://github.com/soin8293/powershell-qops/blob/main/LICENSE'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/soin8293/powershell-qops'

        # A URL to an icon representing this module.
        # IconUri = ''

        # ReleaseNotes of this module
        ReleaseNotes = @{
            '0.2.0' = @(
                'Added Fix-DiskCleanup function to identify and remove old temporary files.',
                'Fix-DiskCleanup supports -DryRun mode, logging to %ProgramData%, and ShouldProcess confirmation.',
                'Added Pester tests for Fix-DiskCleanup covering dry run, live run, logging, and edge cases.',
                'Updated module manifest and wrapper script for Fix-DiskCleanup.'
            )
            '0.1.0' = @(
                'Initial release.',
                'Added Get-SystemReport function to collect OS and disk information.',
                'Implemented Pester tests with mocking for Get-SystemReport.',
                'Set up GitHub Actions CI with linting, testing, coverage enforcement (80%), and cross-platform builds (Windows, Ubuntu).'
            )
        }
    } # End of PSData hashtable
} # End of PrivateData hashtable

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override a command prefix using the Prefix attribute on the Alias attribute above.
# DefaultCommandPrefix = ''
}